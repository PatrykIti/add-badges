name: Creating Release [Tag]
on:
  pull_request:
    types: [closed]
jobs:
  check-version:
    name: Check Tag Version
    runs-on: ubuntu-latest       
    outputs:
      tag_v_major: ${{ steps.semvers.outputs.v_major }}
      tag_v_minor: ${{ steps.semvers.outputs.v_minor }}
      tag_v_patch: ${{ steps.semvers.outputs.v_patch }}
    steps:
    - uses: actions/checkout@v3  
      with:
        fetch-depth: 0 
    - name: 'Get Previous tag'
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
      with:
        fallback: 0.0.0
        prefix: v
    - name: 'Get next version'
      id: semvers
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previoustag.outputs.tag }}
  next-release:
    name: Generate Next Version
    runs-on: ubuntu-latest 
    needs:
      - check-version
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 
    - name: Creating tag for Minor version
      uses: rickstaa/action-create-tag@v1
      if: contains(github.event.pull_request.labels.*.name, 'feat')
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag: "${{ needs.check-version.outputs.tag_v_minor }}"
    - name: Creating tag for Major version
      uses: rickstaa/action-create-tag@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      if: contains(github.event.pull_request.labels.*.name, 'BREAKING CHANGE')
      with:
        tag: "${{ needs.check-version.outputs.tag_v_major }}"
    - name: Creating tag for Patch version
      uses: rickstaa/action-create-tag@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      if: contains(github.event.pull_request.labels.*.name, 'fix')
      with:
        tag: "${{ needs.check-version.outputs.tag_v_patch }}"
  generate-changelog:
    name: Generate Changelog
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'docs') || !contains(github.event.pull_request.labels.*.name, 'refactor') || !contains(github.event.pull_request.labels.*.name, 'chore')}}
    runs-on: ubuntu-latest 
    needs:
      - next-release
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: 'Get current tag'
      id: currenttag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
    - name: Generate Changelog
      uses: heinrichreimer/github-changelog-generator-action@v2.3
      id: Changelog
      with:
        token: ${{ github.token }}
    - name: Commit files
      env:
        CI_USER: "github-actions"
        CI_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
      run: |
        git config --local user.email "$CI_EMAIL"
        git config --local user.name "$CI_USER"
        git add CHANGELOG.md && git commit -m 'Changelog for Release ${{ steps.currenttag.outputs.tag }}' && echo "push=true" >> $GITHUB_ENV || echo "No chanages to commit to CHANGELOG.md"
    - name: Push changes
      if: env.push == 'true'
      env:
        CI_USER: "github-actions"
        CI_TOKEN: ${{ secrets.TOKEN }}
      run: |
        git push "https://$CI_USER:$CI_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:master
  nothing-to-release:
    name: No version to update
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'feat') || !contains(github.event.pull_request.labels.*.name, 'BREAKING CHANGE') || !contains(github.event.pull_request.labels.*.name, 'fix')}}
    needs:
      - check-version
    steps:
      - name: Changes related to docs
        if: contains(github.event.pull_request.labels.*.name, 'docs') 
        shell: bash
        run:  echo "There were changes releted to 'documentation' so the version will be not updated."
      - name: Changes related to refactoring
        if: contains(github.event.pull_request.labels.*.name, 'refactor') 
        shell: bash
        run:  echo "There was some refactor of the code so the version will be not updated."
      - name: Changes related to docs
        if: contains(github.event.pull_request.labels.*.name, 'chore') 
        shell: bash
        run:  echo "Some tools or other stuff were added so the version will be not updated."
